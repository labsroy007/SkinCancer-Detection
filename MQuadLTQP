clc
close all;
clear
I = dicomread('E:\books\bharti vidyapeeth\biomedical image indexing\qltqep\indexing\W0011\1.2.826.0.1.3680043.2.656.1.166\S02A01\1.2.826.0.1.3680043.2.656.1.168.1.dcm')
   %use your own datapath
%     b = imbinarize(B);
%     m=edge(b,'sobel');
%    c=imcomplement(m);
   
  [a b] = size(I);
 %corp=rem(a,7);
 final_row=a;
 %corp=rem(b,7);
 final_col=b;
 row_start=1;
 row_end=7;
 column_start=1;
 index_i=1;
 index_j=1;
 A=I;
 nisheet=2;
 WeightMatrix = [8 4 2; 16 0 1; 32 64 128];
 while row_end<=final_row
     column_start=1;
     column_end=7;
     index_j=1;
     while column_end<=final_col
         B=A(row_start : row_end, column_start : column_end);
         Q = cat(3,B(1:3,1:3), B(1:3,5:7),B(5:7,1:3),B(5:7,1:3));
         for i=1:4
             lower = Q(2,2,i) - nisheet;
             upper = Q(2,2,i) + nisheet;
             for j=1:3
                   for k=1:3
                       if(j==2 && k==2)
                           Q(j,k,i)=0;
                       else
                        if Q(j,k,i)<=lower
                            Q(j,k,i)= -1;
                        elseif Q(j,k,i)>=upper
                            Q(j,k,i)= 1;
                        else
                            Q(j,k,i) = 0;
                        end
                       end
                   end
             end
             for j=1:2
                 for k=1:3
                     for l=1:3
                         if j==1
                             if Q(k,l,i)<=0
                                 ltp(k,l,j)=0;
                             else
                                 ltp(k,l,j)=1;
                             end
                         else
                             if Q(k,l,i)<0
                                 ltp(k,l,j)=1;
                             else
                                 ltp(k,l,j)=0;
                             end
                         end
                     end
                 end
                 ltp(:,:,j)=ltp(:,:,j)*WeightMatrix;
                 sum1=0;
                 for k=1:3
                     for l=1:3
                       sum1=sum1+ltp(k,l,j);  
                     end
                 end
                 if j==1
                     alpha(i)=sum1;
                 else
                     beta(i)=sum1;
                 end
             end
         end
         %m1=max(alpha);
         %temp=sum(alpha)-m1;
         %temp=sum(alpha);
         %while(temp>128)
          %   temp=temp-128;
         %end
         img1(index_i,index_j)=min(alpha);
         %m1=min(beta);
         %temp=sum(beta)-m1;
         %temp=sum(beta);
         %while(temp>128)
          %   temp=temp-128;
         %end
         img2(index_i,index_j)=min(beta);
         index_j=index_j+1;
         column_start=column_start+1;
         column_end=column_end+1;
     end
     index_i=index_i+1
     row_start=row_start+1;
     row_end=row_end+1;
 end
 %imshowpair(m,img1,'diff');

%   figure,imshow(img1);
  y=colormap(hot(110));
   X=imwrite(img1,y,'rgb.jpg','jpg'); % Re-change it to colored one 
   imshow(X);
  
%   figure,imshow(img2);
   figure,imhist(X);
%  histogram2=imhist(img2);
%  bothhist = [histogram1(:); histogram2(:)];
%  c=c1+c2;
% disp(c);

%imhist(img2)
% H=mat2gray(pixel)
% for i = 1:7
%     for j = 1:7
%         display(I(i,j))
%         display(' ')
%     end
%     display('\n')
% end
%   A=I
%   B=A(1 : 7, 1 : 7)
%    C = B - 1
%   M=logical([1 0 0 1 0 0 1;
%              0 1 0 1 0 1 0;
%              0 0 1 1 1 0 0;
%              1 1 1 1 1 1 1;
%              0 0 1 1 1 0 0;
%              0 1 0 1 0 1 0;
%              1 0 0 1 0 0 1;])
%   C(logical(M))
%   C(1, :)
%   e=5
%   d=2
%   for i=1:3
%     if((C(4,e-d)*C(4,e))>2)
%         D(i)=1;
%     else
%         D(i)=0;
%     end
%     if((C(e-d,4)*C(e,4))>2)
%         D(i+3)=1;
%     else
%         D(i+3)=0;
%     end
%     if((C(e,e)*C(d,d))>2)
%         D(i+6)=1;
%     else
%         D(i+6)=0;
%     end
%     if((C(e,d)*C(d,e))>2)
%         D(i+9)=1;
%     else
%         D(i+9)=0;
%     end
%     if((C(4,e-d)*C(4,e))<-2)
%         E(i)=1;
%     else
%         E(i)=0;
%     end
%     if((C(e-d,4)*C(e,4))<-2)
%         E(i+3)=1;
%     else
%         E(i+3)=0;
%     end
%     if((C(e,e)*C(d,d))<-2)
%         E(i+6)=1;
%     else
%         E(i+6)=0;
%     end
%     if((C(e,d)*C(d,e))<-2)
%         E(i+9)=1;
%     else
%         E(i+9)=0;
%     end
%     e=e+1;
%     d=d+1;
%   end
%   D
%   E
%   temp=1;
%   for i=0:11
%       weight(i+1)=2^i
%   end
%   sum1=0
%   sum2=0
%   for i=1:12
%       if(D(i)==1)
%           sum1=sum1+weight(i);
%       end
%       if(E(i)==1)
%           sum2=sum2+weight(i);
%       end
%   end
%   sum1
%   sum2
%   
% % for c = 1:7
% %      for r = 1:7
%  
% %  if((4,3)*(4,5)>=2)&&((4,2)*(4,6)>=2)&&((4,1)*(4,7)>=2)
% %      a=1;
% %  elseif((4,3)*(4,5)<2)&&((4,2)*(4,6)<2)&&((4,1)*(4,7)<2)
% %      a=0;
% %  else
% %      a=2;
% %  end
% % for c = 1:7
% %     for r = 1:7
% %   if(18*32>=2)&&(11*39>=2)&&(4*46>=2)
% %       a=1;
% %   elseif(18*32<2)&&(11*39<2)&&(4*46<2)
% %       a=0;
% %   else
% %       a=2;
% %   end
% %     end
% % end
% %       C(:,4)
%      
% 
% 
% %   imhist(I);
[XTrain,YTrain] = digitTrain4DArrayData;
layers = [ ...
    imageInputLayer([28 28 1])
    convolution2dLayer(5,20)
    reluLayer
    maxPooling2dLayer(2,'Stride',2)
    fullyConnectedLayer(10)
    softmaxLayer
    classificationLayer];
%options = trainingOptions('sgdm','Plots','training-progress')
options = trainingOptions('sgdm', ...
    'MaxEpochs',8, ...
    'ValidationData',{XValidation,YValidation}, ...
    'ValidationFrequency',30, ...
    'Verbose',false, ...
    'Plots','training-progress');
% options = trainingOptions('sgdm', ...
%     'LearnRateSchedule','piecewise', ...
%     'LearnRateDropFactor',0.2, ...
%     'LearnRateDropPeriod',5, ...
%     'MaxEpochs',20, ...
%     'MiniBatchSize',64, ...
%     'Plots','training-progress')
rng('default')
net = trainNetwork(XTrain,YTrain,layers,options);
